name: PR Build

on:
    pull_request:
        types: [opened, synchronize, reopened]
        branches: [main, master, develop] # 根据你的主分支调整
    pull_request_target:
        types: [opened, synchronize, reopened]
        branches: [main, master, develop]

permissions:
    contents: read
    pull-requests: write
    checks: write

env:
    PLUGIN_ID: yearly-glance

jobs:
    build:
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout PR code
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "18.x"
                  cache: "npm"

            - name: Install dependencies
              run: |
                  npm install -g yarn
                  yarn install --frozen-lockfile

            - name: Build project
              run: |
                  yarn run build --if-present

            - name: Prepare build artifacts
              run: |
                  mkdir -p ${{ env.PLUGIN_ID }}
                  cp main.js manifest.json styles.css ${{ env.PLUGIN_ID }}/
                  zip -r ${{ env.PLUGIN_ID }}-pr-${{ github.event.number }}.zip ${{ env.PLUGIN_ID }}

            - name: Upload build artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.PLUGIN_ID }}-pr-${{ github.event.number }}
                  path: |
                      main.js
                      manifest.json
                      styles.css
                      ${{ env.PLUGIN_ID }}-pr-${{ github.event.number }}.zip
                  retention-days: 30

            - name: Comment PR with download link
              uses: actions/github-script@v6
              with:
                  script: |
                      const { owner, repo } = context.repo;
                      const prNumber = context.payload.pull_request.number;
                      const runId = context.runId;

                      const comment = `## 🔨 构建完成

                      PR #${prNumber} 的构建产物已准备就绪！

                      📦 **下载构建产物：**
                      - [点击这里下载 ${{ env.PLUGIN_ID }}-pr-${prNumber}.zip](https://github.com/${owner}/${repo}/actions/runs/${runId})

                      🔄 **安装说明：**
                      1. 下载上面的 zip 文件
                      2. 解压到 Obsidian 库的插件文件夹：\`<vault>/.obsidian/plugins/${{ env.PLUGIN_ID }}/\`
                      3. 重启 Obsidian
                      4. 在设置中启用插件

                      ⚠️ **注意：** 这是 PR 构建版本，仅用于测试目的。

                      ---
                      *构建时间：* ${new Date().toISOString()}
                      *提交：* ${{ github.event.pull_request.head.sha.substring(0, 7) }}`;

                      // 查找是否已有构建评论
                      const comments = await github.rest.issues.listComments({
                        owner,
                        repo,
                        issue_number: prNumber
                      });

                      const existingComment = comments.data.find(comment => 
                        comment.body.includes('🔨 构建完成') && comment.user.type === 'Bot'
                      );

                      if (existingComment) {
                        // 更新现有评论
                        await github.rest.issues.updateComment({
                          owner,
                          repo,
                          comment_id: existingComment.id,
                          body: comment
                        });
                      } else {
                        // 创建新评论
                        await github.rest.issues.createComment({
                          owner,
                          repo,
                          issue_number: prNumber,
                          body: comment
                        });
                      }

    # 可选：添加构建状态检查
    build-status:
        runs-on: ubuntu-22.04
        needs: build
        if: always()

        steps:
            - name: Set build status
              uses: actions/github-script@v6
              with:
                  script: |
                      const { owner, repo } = context.repo;
                      const sha = context.payload.pull_request.head.sha;
                      const state = '${{ needs.build.result }}' === 'success' ? 'success' : 'failure';
                      const description = state === 'success' ? '构建成功，产物已准备就绪' : '构建失败，请检查日志';

                      await github.rest.repos.createCommitStatus({
                        owner,
                        repo,
                        sha,
                        state,
                        target_url: `https://github.com/${owner}/${repo}/actions/runs/${context.runId}`,
                        description,
                        context: 'PR Build'
                      });
